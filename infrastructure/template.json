{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Outputs": {
    "SignApiUrl": {
      "Value": {
        "Fn::Sub": [
          "${ApiBaseUrl}/sign",
          {
            "ApiBaseUrl": {
              "Fn::GetAtt": [
                "SignApiGateway",
                "ApiEndpoint"
              ]
            }
          }
        ]
      }
    },
    "WebSocketApiUrl": {
      "Value": {
        "Fn::Sub": [
          "${ApiBaseUrl}/${WebSocketStage}",
          {
            "ApiBaseUrl": {
              "Fn::GetAtt": [
                "WebSocketApiGateway",
                "ApiEndpoint"
              ]
            }
          }
        ]
      }
    }
  },
  "Resources": {
    "SignApiGateway": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-sign-api-gw"
        },
        "ProtocolType": "HTTP"
      }
    },
    "WebSocketApiGateway": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-ws-api-gw"
        },
        "ProtocolType": "WEBSOCKET",
        "RouteSelectionExpression": "$request.body.action"
      }
    },
    "SignIntegration": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "SignApiGateway"
        },
        "IntegrationMethod": "POST",
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Sub": [
            "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SignFunctionArn}/invocations",
            {
              "SignFunctionArn": {
                "Fn::GetAtt": [
                  "SignFunction",
                  "Arn"
                ]
              }
            }
          ]
        },
        "PayloadFormatVersion": "2.0"
      }
    },
    "WsConnectIntegration": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "WebSocketApiGateway"
        },
        "IntegrationMethod": "POST",
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Sub": [
            "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${WsConnectFunctionArn}/invocations",
            {
              "WsConnectFunctionArn": {
                "Fn::GetAtt": [
                  "WsConnectFunction",
                  "Arn"
                ]
              }
            }
          ]
        }
      }
    },
    "WsDefaultIntegration": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "WebSocketApiGateway"
        },
        "IntegrationMethod": "POST",
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Sub": [
            "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${WsDefaultFunctionArn}/invocations",
            {
              "WsDefaultFunctionArn": {
                "Fn::GetAtt": [
                  "WsDefaultFunction",
                  "Arn"
                ]
              }
            }
          ]
        }
      }
    },
    "WsDisconnectIntegration": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "WebSocketApiGateway"
        },
        "IntegrationMethod": "POST",
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Sub": [
            "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${WsDisconnectFunctionArn}/invocations",
            {
              "WsDisconnectFunctionArn": {
                "Fn::GetAtt": [
                  "WsDisconnectFunction",
                  "Arn"
                ]
              }
            }
          ]
        }
      }
    },
    "SignRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "SignApiGateway"
        },
        "AuthorizationType": "NONE",
        "RouteKey": "POST /sign",
        "Target": {
          "Fn::Sub": "integrations/${SignIntegration}"
        }
      }
    },
    "WsConnectRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "WebSocketApiGateway"
        },
        "AuthorizationType": "AWS_IAM",
        "RouteKey": "$connect",
        "Target": {
          "Fn::Sub": "integrations/${WsConnectIntegration}"
        }
      }
    },
    "WsDefaultRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "WebSocketApiGateway"
        },
        "RouteKey": "$default",
        "Target": {
          "Fn::Sub": "integrations/${WsDefaultIntegration}"
        }
      }
    },
    "WsDisconnectRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "WebSocketApiGateway"
        },
        "RouteKey": "$disconnect",
        "Target": {
          "Fn::Sub": "integrations/${WsDisconnectIntegration}"
        }
      }
    },
    "SignStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "SignApiGateway"
        },
        "AutoDeploy": true,
        "StageName": "$default"
      }
    },
    "WebSocketStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "WebSocketApiGateway"
        },
        "AutoDeploy": true,
        "StageName": "$default"
      }
    },
    "ConnectionsTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "connectionId",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": [
          {
            "AttributeName": "connectionId",
            "KeyType": "HASH"
          }
        ],
        "TableName": {
          "Fn::Sub": "${AWS::StackName}-connections-table"
        }
      }
    },
    "SignFunctionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Effect": "Allow"
            }
          ]
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": "logs:CreateLogGroup",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"
                  }
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Sub": [
                      "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${FunctionName}:*",
                      {
                        "FunctionName": {
                          "Fn::Sub": "${AWS::StackName}-sign-function"
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "PolicyName": "AWSLambdaBasicExecutionRole"
          },
          {
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": "execute-api:Invoke",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Sub": "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${WebSocketApiGateway}/${WebSocketStage}/*"
                  }
                }
              ]
            },
            "PolicyName": "CustomPolicy"
          }
        ],
        "RoleName": {
          "Fn::Sub": "${AWS::StackName}-sign-function-role"
        }
      }
    },
    "WsConnectFunctionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Effect": "Allow"
            }
          ]
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": "logs:CreateLogGroup",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"
                  }
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Sub": [
                      "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${FunctionName}:*",
                      {
                        "FunctionName": {
                          "Fn::Sub": "${AWS::StackName}-ws-connect-function"
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "PolicyName": "AWSLambdaBasicExecutionRole"
          },
          {
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": "dynamodb:PutItem",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "ConnectionsTable",
                      "Arn"
                    ]
                  }
                }
              ]
            },
            "PolicyName": "CustomPolicy"
          }
        ],
        "RoleName": {
          "Fn::Sub": "${AWS::StackName}-ws-connect-function-role"
        }
      }
    },
    "WsDefaultFunctionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Effect": "Allow"
            }
          ]
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": "logs:CreateLogGroup",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"
                  }
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Sub": [
                      "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${FunctionName}:*",
                      {
                        "FunctionName": {
                          "Fn::Sub": "${AWS::StackName}-ws-default-function"
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "PolicyName": "AWSLambdaBasicExecutionRole"
          },
          {
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": "dynamodb:GetItem",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "ConnectionsTable",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": "execute-api:ManageConnections",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Sub": "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${WebSocketApiGateway}/${WebSocketStage}/POST/@connections/*"
                  }
                }
              ]
            },
            "PolicyName": "CustomPolicy"
          }
        ],
        "RoleName": {
          "Fn::Sub": "${AWS::StackName}-ws-default-function-role"
        }
      }
    },
    "WsDisconnectFunctionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Effect": "Allow"
            }
          ]
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": "logs:CreateLogGroup",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"
                  }
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Sub": [
                      "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${FunctionName}:*",
                      {
                        "FunctionName": {
                          "Fn::Sub": "${AWS::StackName}-ws-disconnect-function"
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "PolicyName": "AWSLambdaBasicExecutionRole"
          },
          {
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": "dynamodb:DeleteItem",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "ConnectionsTable",
                      "Arn"
                    ]
                  }
                }
              ]
            },
            "PolicyName": "CustomPolicy"
          }
        ],
        "RoleName": {
          "Fn::Sub": "${AWS::StackName}-ws-disconnect-function-role"
        }
      }
    },
    "SignFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Architectures": [
          "arm64"
        ],
        "Code": {
          "ZipFile": "exports.handler = async (event) => ({ body: JSON.stringify(event), headers: { 'content-type': 'application/json' }, statusCode: 200 });"
        },
        "Environment": {
          "Variables": {
            "WEBSOCKET_API_URL": {
              "Fn::Sub": [
                "${ApiBaseUrl}/${WebSocketStage}",
                {
                  "ApiBaseUrl": {
                    "Fn::GetAtt": [
                      "WebSocketApiGateway",
                      "ApiEndpoint"
                    ]
                  }
                }
              ]
            }
          }
        },
        "FunctionName": {
          "Fn::Sub": "${AWS::StackName}-sign-function"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "SignFunctionRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs20.x"
      }
    },
    "WsConnectFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Architectures": [
          "arm64"
        ],
        "Code": {
          "ZipFile": "exports.handler = async (event) => ({ body: JSON.stringify(event), headers: { 'content-type': 'application/json' }, statusCode: 200 });"
        },
        "Environment": {
          "Variables": {
            "CONNECTIONS_TABLE_NAME": {
              "Ref": "ConnectionsTable"
            }
          }
        },
        "FunctionName": {
          "Fn::Sub": "${AWS::StackName}-ws-connect-function"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "WsConnectFunctionRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs20.x"
      }
    },
    "WsDefaultFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Architectures": [
          "arm64"
        ],
        "Code": {
          "ZipFile": "exports.handler = async (event) => ({ body: JSON.stringify(event), headers: { 'content-type': 'application/json' }, statusCode: 200 });"
        },
        "Environment": {
          "Variables": {
            "CONNECTIONS_TABLE_NAME": {
              "Ref": "ConnectionsTable"
            },
            "WEBSOCKET_API_GATEWAY_ENDPOINT": {
              "Fn::Sub": "https://${WebSocketApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${WebSocketStage}"
            }
          }
        },
        "FunctionName": {
          "Fn::Sub": "${AWS::StackName}-ws-default-function"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "WsDefaultFunctionRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs20.x"
      }
    },
    "WsDisconnectFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Architectures": [
          "arm64"
        ],
        "Code": {
          "ZipFile": "exports.handler = async (event) => ({ body: JSON.stringify(event), headers: { 'content-type': 'application/json' }, statusCode: 200 });"
        },
        "Environment": {
          "Variables": {
            "CONNECTIONS_TABLE_NAME": {
              "Ref": "ConnectionsTable"
            }
          }
        },
        "FunctionName": {
          "Fn::Sub": "${AWS::StackName}-ws-disconnect-function"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "WsDisconnectFunctionRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs20.x"
      }
    },
    "SignFunctionPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "SignFunction"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${SignApiGateway}/${SignStage}/POST/sign"
        }
      }
    },
    "WsConnectFunctionPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "WsConnectFunction"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${WebSocketApiGateway}/${WebSocketStage}/$connect"
        }
      }
    },
    "WsDefaultFunctionPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "WsDefaultFunction"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${WebSocketApiGateway}/${WebSocketStage}/$default"
        }
      }
    },
    "WsDisconnectFunctionPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "WsDisconnectFunction"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${WebSocketApiGateway}/${WebSocketStage}/$disconnect"
        }
      }
    }
  }
}
